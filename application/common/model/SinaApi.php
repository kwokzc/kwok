<?php
/**
 * 新浪财经 Api接口
 * 两种查询
 * 1. 简短查询
 *
 * http://hq.sinajs.cn/list=s_sh510880
 *
 * 返回结果含义：
 * 	0	红利ETF,名字；
 *	1	2.805,当前点数/价格；
 *	2	0.011,涨跌额；
 *	3	0.39,涨跌幅%；
 *	4	57049,成交量(手)；
 *	5	1596,成交额(万元)；
 *
 * 2. 详细查询
 *
 * http://hq.sinajs.cn/list=sz159938
 *
 * 返回结果含义：
 *	0	广发医药,股票名字；
 *	1	1.224,今日开盘价；
 *	2	1.227,昨日收盘价；
 *	3	1.235,当前价格；
 *	4	1.236,今日最高价；
 *	5	1.223,今日最低价；
 *	6	1.234,竞买价，即“买一”报价；
 *	7	1.235,竞卖价，即“卖一”报价；
 *	8	13406170,成交的股票数(成交量)，由于股票交易以一百股为基本单位，所以在使用时，通常把该值除以一百；
 *	9	16507290.840,成交金额(成交额)，单位为“元”，为了一目了然，通常以“万元”为成交金额的单位，所以通常把该值除以一万；
 *	10	270900,“买一委托量,2709手”;
 *	11	1.234,“买一价格”;
 *	12	212200,“买二委托量”
 *	13	1.233,“买二价格”
 *	14	201300,“买三委托量”
 *	15	1.232,“买三价格”
 *	16	11100,“买四委托量”
 *	17	1.231,“买四价格”
 *	18	790200,“买五委托量”
 *	19	1.230,“买五价格”
 *	20	229000,“卖一委托量,2290手”;
 *	21	1.235,“卖一价格”
 *	22	1701600,“卖二委托量”;
 *	23	1.236,“卖二价格”
 *	24	206300,“卖三委托量”;
 *	25	1.237,“卖三价格”
 *	26	382900,“卖四委托量”;
 *	27	1.238,“卖四价格”
 *	28	11600,“卖五委托量”;
 *	29	1.239,“卖五价格”
 *	30	2019-07-26,日期;
 *	31	15:00:03,00,时间;
 *
 *
 * 以上两种方式都可同时查询多个
 * http://hq.sinajs.cn/list=s_sz159938,s_sh510880
 * http://hq.sinajs.cn/list=sz159938,sh518880
 */

namespace app\common\model;


class SinaApi
{
    /**
     * 获取主要信息
     * @param $data|array 传入二维数组,需要有交易所和代码 jys,code
     * @return mixed|string
     */
    public function getAll($data,$isAll = 0)
    {
        //初始化一个数组用来保存url后半部分
        $str = '';

        //定义一个数组，用来决定是否获取详细信息
        if ($isAll == 0){
            //如果是0则获取简短信息
            $tmp = 's_';
        }else{
            $tmp = '';
        }
        //开始循环,获得后半部分

        for ($i = 0;$i < count($data);$i++){
            $str = $str.$tmp.$data[$i]['jys'].$data[$i]['code'].',';
        }

        //获得完整的url
        $url = 'http://hq.sinajs.cn/list='.$str;

        //定义一个数组，存放空格符号和换行符和双引号
        $str=array(" ","　","\t","\n","\r",'"');

        //获得去除空格、换行和双引号 并转换编码的数据内容
        $res = str_replace($str, '', mb_convert_encoding(file_get_contents($url),"UTF-8", "GBK"));

        //使用分号；来分割数据为数组，并过滤掉空白数组
        $res = array_filter(explode(';',$res));

        //此时的数据还没有完全数组化,接下来完全数组化

        //定义一个数组保存结果
        $data=[];
        //循环处理
        for ($i = 0;$i < count($res);$i++){
            //将股票或基金代码和数据分开
            $tmp = array_filter(explode('=',$res[$i]));
            //保存代码为key
            $k = str_replace('varhq_str_s_','',$tmp[0]);
            //保存数组化的value
            $v = array_filter(explode(',',$tmp[1]));
            //将数组追加到data数组
            array_push($data,[$k=>$v]);
        }
        //返回二维数组
        return $data;
    }

    public function getValue($data)
    {
        //获取查询到的数据
        $res = $this->getAll($data);
        //定义一个数组保存处理好的数据
        $data = [];
        //循环获得单个品种数据
        foreach ($res as $value){
            //循环获得价格 下标为1
            foreach ($value as $k => $v){
                //追加到数组保存
                array_push($data,[$k => $v[1]]);
            }
        }
        //返回处理好的数据
        return $data;
    }
}